version: '3'

services:
  mongo_db:
    image: mongo:4.4.18
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_db/dump:/mongo_db/dump
    networks:
      app_network:
        ipv4_address: 192.168.55.4

  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    container_name: fastapi
    stop_signal: SIGKILL
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - mongo_db
    networks:
      app_network:
        ipv4_address: 192.168.55.5

  nginx:
    container_name: "nginx"
    image: nginx:alpine
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    networks:
      app_network:
        ipv4_address: 192.168.55.6

  aiogram_bot:
    build:
      context: .
      dockerfile: ./aiogram_bot/Dockerfile
    container_name: aiogram_bot
    depends_on:
      - nginx
    networks:
      app_network:
        ipv4_address: 192.168.55.7

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    command: redis-server /usr/local/etc/redis/redis.conf
    depends_on:
      - app
    networks:
      app_network:
        ipv4_address: 192.168.55.8

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.55.0/24
          gateway: 192.168.55.1
